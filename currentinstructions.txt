
• Modify your main navigation bar so that it can print out either the ”Logout
/ My Account / Wishlist / Shopping Cart” options, or a ”Sign-in / Sign-up
/ Shopping Cart” set of options. Put the choice of which one to print as a
conditional, which we will fill in later in the assignment. Default to the new
”Sign-in / Sign-up / Shopping Cart” version for now.

• When the user clicks on ”Sign-in” display a form for them to provide a username
and password. When this form is submitted, you should execute the
query listed below for finding a user account. There is a customer account
already created, with a username ”testUser” and a password ”testPassword”.
If the query returns a result, then record that customer_id in the $_SESSION
variable under some key, so that you can continue to know that the user is
logged in.

• When the user is logged in, your conditional from before should switch to
printing the ”Logout / My Account / Wishlist / Shopping Cart” navigation.
When the user clicks on Logout, you should unset the $_SESSION value you
saved earlier.

• If the user clicked on ”Sign-up” provide them a form to fill out each of the
fields: username, password, full name, and address (as a text box - not broken
into pieces). You will need to validate that the username is not already in use,
and re-prompt the user if it is (I recommend filling the full name and address
fields with what the user had just submitted if that is the case). SQL for these
actions is below.

• When the user is logged in, and clicks on the ”Add to Wishlist” or ”Add to
Shopping Cart” buttons (on an artwork page), you should execute the appropriate
SQL below to record that in the database.

• When the user is not logged in, please hide the ”Add to Wishlist” buttons on
the artwork pages. The action of the ”Add to Shopping Cart” will also change
(since there is not a customer_id to rely on). Please store the items in the
shopping cart in the $_SESSION variable instead.

• Update the behavior of when the user logs in, to include converting any shopping
cart items in the $_SESSION variable to be added to the database (now
that there is a customer_id)

• When the user clicks on ”Shopping Cart” or ”Wishlist” in the navigation, build
a list of the items. Provide a way for the user to remove items from the list
(or change the quantity in the case of the ”Shopping Cart”). SQL below. I
recommend buttons for signaling a removal of an item, as you can set the name
of many buttons to be the same, but have the value of the button reflect what
is being removed.

• On the ”Shopping Cart” page, provide a button for ”placing the order” - We
won’t be taking any payment information, but instead, you should display the
list of items with a text field for writing where the artwork will ship to (in case
the customer wants to ship them to different locations). When they submit
that form, you will need to save that data in the database using the SQL below
(one to find what the new order number will be, the other to save the changes
for each order item). If the user is not logged in, instead of allowing them
to ”place the order”, prompt them to create an account instead (link to that
page, not in-place please)

• On the ”My Account” page, provide the user with the list of previous orders in
a format that is reasonable. The query result for this one is a little interesting,
as it will be a list of every item that was ordered, with one of the column fields
in that list being which order it corresponds to. You will need to group these
by order number, and correctly sort them when displaying them to the user.

• When you are satisfied with the feature, commit the changes (you can commit
changes periodically while building this too).

• Merge the branch with the ”main” branch - I will pull your code from the main
branch for grading.

• Upload an image of your git repository or completed page to indicate you are
done with the assignment. The code for your assignment will be pulled from
you Git Repository directly.

Finding a user account
This query will take two inputs: the username, and a hashed password. Please use
the following PHP code to hash the password:
$hashedPassword = md5($username.’SECRET’.$password);
This is not a fully secured approach, but it is sufficient for now. You will then use
the inputs in the following query:
SELECT customer_id
FROM Customer
WHERE customer_username=? AND customer_passhash=?
Is customer username already taken
SELECT COUNT(*) as count
FROM Customer
WHERE customer_username=?
Add a customer
INSERT INTO Customer
(customer_username, customer_passhash, customer_fullName, customer_addr)
VALUES (?, ?, ?, ?)
After creating a customer, you will need to follow the ”log-in” steps in order to
retrieve the new customer’s customer_id value.
Add artwork to shopping cart
INSERT INTO OrderItem
(oi_orderNum, oi_customer, oi_artwork, oi_quantity, oi_shippingAddr)
VALUES (-1, ?, ?, 1, NULL)
ON DUPLICATE KEY UPDATE oi_quantity=oi_quantity+1
Add artwork to wishlist
INSERT INTO WishlistItem
(wl_customer, wl_artwork)
VALUES (?, ?)
ON DUPLICATE KEY UPDATE wl_customer=wl_customer
Update the quantity of an item
UPDATE OrderItem
SET oi_quantity=?
WHERE oi_orderNum = -1
AND oi_customer=?
AND oi_artwork=?
Remove an item from the shopping cart
DELETE FROM OrderItem
WHERE oi_orderNum = -1
AND oi_customer=?
AND oi_artwork=?
Remove an item from the wishlist
DELETE FROM WishlistItem
WHERE wl_customer=?
AND wl_artwork=?
Get the next order number
SELECT COUNT(*) as nextOrderNumber
FROM OrderItem

WHERE oi_orderNum > -1
GROUP BY oi_orderNum, oi_customer
Mark an item as ordered
UPDATE OrderItem
SET oi_orderNum=?, oi_shippingAddr=?
WHERE oi_orderNum = -1
AND oi_customer=?
AND oi_artwork=?
Get a customer’s order history
SELECT *
FROM OrderItem
WHERE oi_orderNum > -1
AND oi_customer=?
